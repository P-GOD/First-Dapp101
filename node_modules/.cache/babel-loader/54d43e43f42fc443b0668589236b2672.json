{"ast":null,"code":"import _defineProperty from \"/Users/pon/Desktop/Cloud Kingdom Swap/First-Dapp101/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/Users/pon/Desktop/Cloud Kingdom Swap/First-Dapp101/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/pon/Desktop/Cloud Kingdom Swap/First-Dapp101/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/pon/Desktop/Cloud Kingdom Swap/First-Dapp101/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/pon/Desktop/Cloud Kingdom Swap/First-Dapp101/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/pon/Desktop/Cloud Kingdom Swap/First-Dapp101/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/Users/pon/Desktop/Cloud Kingdom Swap/First-Dapp101/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/pon/Desktop/Cloud Kingdom Swap/First-Dapp101/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/pon/Desktop/Cloud Kingdom Swap/First-Dapp101/src/components/App.jsx\";\nimport React, { Component } from \"react\";\nimport Web3 from \"web3\";\nimport NavBar from \"./NavBar\";\nimport Main from \"./../pages/Main\";\nimport Cloudswap from \"./../abis/Cloudswap.json\";\nimport NimbusToken from \"./../abis/NimbusToken.json\";\nimport Farm from \"./../pages/Farm\";\nimport Cloudfarm from \"./../abis/Cloudfarm.json\";\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport \"./App.css\";\nimport FooTer from \"./FooTer\";\nimport Home from \"./../pages/Home\";\nimport MainU from \"./../pages/musdt/MainU\";\nimport Tether from \"./../abis/Tether.json\";\nimport Usdtswap from \"./../abis/Usdtswap.json\";\nimport MainBnb from \"./../pages/mBNB/MainU\";\nimport MainE from \"./../pages/mEth/MainU\";\nimport Eth from \"./../abis/Ether.json\";\nimport ethswap from \"./../abis/Ethswap.json\";\nimport Bnb from \"./../abis/Binance.json\";\nimport bnbSwap from \"./../abis/Bnbswap.json\";\nimport About from \"./../pages/About\";\nvar web3 = new Web3();\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var accounts, oneBalance, nimbusAbi, networkId, nimbusAddress, token, tokenBalance, musdtAbi, musdtAddress, usdtToken, usdtBalance, cloudswapAbi, cloudswapAddress, cloudSwap, usdtswapAbi, usdtswapAddress, usdtSwap, cloudfarmAbi, cloudfarmAddress, cloudfarm, stakingBalance, methAbi, methAddress, ethToken, ethBalance, ethswapAbi, ethswapAddress, _ethswap, mbnbAbi, mbnbAddress, bnbToken, nbnbBalance, bnbswapAbi, bnbswapAddress, bnbswap;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                web3 = window.web3;\n                _context2.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context2.sent;\n                this.setState({\n                  account: accounts[0]\n                });\n                _context2.next = 7;\n                return web3.eth.getBalance(this.state.account);\n\n              case 7:\n                oneBalance = _context2.sent;\n                this.setState({\n                  oneBalance: oneBalance\n                }); //load NimbusToken\n\n                nimbusAbi = NimbusToken.abi;\n                _context2.next = 12;\n                return web3.eth.net.getId();\n\n              case 12:\n                networkId = _context2.sent;\n                nimbusAddress = \"0x4DCf3dBe1728D15Dd2e6a06D72670caf13140F2D\";\n\n                if (!(networkId == 1666700000)) {\n                  _context2.next = 23;\n                  break;\n                }\n\n                token = new web3.eth.Contract(nimbusAbi, nimbusAddress);\n                this.setState({\n                  token: token\n                });\n                _context2.next = 19;\n                return token.methods.balanceOf(this.state.account).call();\n\n              case 19:\n                tokenBalance = _context2.sent;\n                this.setState({\n                  tokenBalance: tokenBalance.toString()\n                });\n                _context2.next = 24;\n                break;\n\n              case 23:\n                window.alert(\"Clouds Kingdom Swap contract not deployed to detected network.\");\n\n              case 24:\n                //load mUsdt\n                musdtAbi = Tether.abi;\n                musdtAddress = \"0x8b74DdA20Dd6107823693C1b437f6849a42eB676\";\n\n                if (!(networkId == 1666700000)) {\n                  _context2.next = 35;\n                  break;\n                }\n\n                usdtToken = new web3.eth.Contract(musdtAbi, musdtAddress);\n                this.setState({\n                  usdtToken: usdtToken\n                });\n                _context2.next = 31;\n                return usdtToken.methods.balanceOf(this.state.account).call();\n\n              case 31:\n                usdtBalance = _context2.sent;\n                this.setState({\n                  usdtBalance: usdtBalance.toString()\n                });\n                _context2.next = 36;\n                break;\n\n              case 35:\n                window.alert(\"mUSDT contract not deployed to detected network.\");\n\n              case 36:\n                //load Cloudswap\n                cloudswapAbi = Cloudswap.abi;\n                cloudswapAddress = \"0x92e7C15f8c98288A9a0A9fc5281AA837B17D6D82\";\n\n                if (networkId == 1666700000) {\n                  cloudSwap = new web3.eth.Contract(cloudswapAbi, cloudswapAddress);\n                  this.setState({\n                    cloudSwap: cloudSwap\n                  });\n                } else {\n                  window.alert(\"Clouds Kingdom Swap contract not deployed to detected network.\");\n                } //load usdtSwap\n\n\n                usdtswapAbi = Usdtswap.abi;\n                usdtswapAddress = \"0xfE5f3518CB4b80F0e424d1dDf860A37fa91b17d9\";\n\n                if (networkId == 1666700000) {\n                  usdtSwap = new web3.eth.Contract(usdtswapAbi, usdtswapAddress);\n                  this.setState({\n                    usdtSwap: usdtSwap\n                  });\n                } else {\n                  window.alert(\"Clouds Kingdom Swap contract not deployed to detected network.\");\n                } //load Cloudfarm\n\n\n                cloudfarmAbi = Cloudfarm.abi;\n                cloudfarmAddress = \"0x6838c76A8b7F3155D78C2bDf549b2e42ed28d4C2\";\n\n                if (!(networkId == 1666700000)) {\n                  _context2.next = 53;\n                  break;\n                }\n\n                cloudfarm = new web3.eth.Contract(cloudfarmAbi, cloudfarmAddress);\n                this.setState({\n                  cloudfarm: cloudfarm\n                });\n                _context2.next = 49;\n                return cloudfarm.methods.stakingBalance(this.state.account).call();\n\n              case 49:\n                stakingBalance = _context2.sent;\n                this.setState({\n                  stakingBalance: stakingBalance.toString()\n                });\n                _context2.next = 54;\n                break;\n\n              case 53:\n                window.alert(\"CloudsKingdomSwap contract not deployed to detected network.\");\n\n              case 54:\n                methAbi = Eth.abi;\n                methAddress = \"0x79eBF567B2207dAfd8DA44FAb897664F5ef1EF11\";\n\n                if (!(networkId == 1666700000)) {\n                  _context2.next = 65;\n                  break;\n                }\n\n                ethToken = new web3.eth.Contract(methAbi, methAddress);\n                this.setState({\n                  ethToken: ethToken\n                });\n                _context2.next = 61;\n                return ethToken.methods.balanceOf(this.state.account).call();\n\n              case 61:\n                ethBalance = _context2.sent;\n                this.setState({\n                  ethBalance: ethBalance.toString()\n                });\n                _context2.next = 66;\n                break;\n\n              case 65:\n                window.alert(\"meth contract not deployed to detected network.\");\n\n              case 66:\n                //load ethswap\n                ethswapAbi = ethswap.abi;\n                ethswapAddress = \"0x8d4afD2d5DA7115fBb9f4bD6720Fb13E0B95E3F6\";\n\n                if (networkId == 1666700000) {\n                  _ethswap = new web3.eth.Contract(ethswapAbi, ethswapAddress);\n                  this.setState({\n                    ethswap: _ethswap\n                  });\n                } else {\n                  window.alert(\"Clouds Kingdom Swap contract not deployed to detected network.\");\n                }\n\n                mbnbAbi = Bnb.abi;\n                mbnbAddress = \"0xdE8335956603378F934f7E2De27a9961E5f67642\";\n\n                if (!(networkId == 1666700000)) {\n                  _context2.next = 80;\n                  break;\n                }\n\n                bnbToken = new web3.eth.Contract(mbnbAbi, mbnbAddress);\n                this.setState({\n                  bnbToken: bnbToken\n                });\n                _context2.next = 76;\n                return bnbToken.methods.balanceOf(this.state.account).call();\n\n              case 76:\n                nbnbBalance = _context2.sent;\n                this.setState({\n                  bnbBalance: nbnbBalance.toString()\n                });\n                _context2.next = 81;\n                break;\n\n              case 80:\n                window.alert(\"mbnb contract not deployed to detected network.\");\n\n              case 81:\n                bnbswapAbi = bnbSwap.abi;\n                bnbswapAddress = \"0xB3c9ef8f9Ddf730DedbE1A1f7cbd75b90b3dD2Ec\";\n\n                if (networkId == 1666700000) {\n                  bnbswap = new web3.eth.Contract(bnbswapAbi, bnbswapAddress);\n                  this.setState({\n                    bnbswap: bnbswap\n                  });\n                } else {\n                  window.alert(\"Clouds Kingdom Swap contract not deployed to detected network.\");\n                }\n\n                this.setState({\n                  loading: false\n                });\n\n              case 85:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context3.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context3.next = 7;\n                break;\n\n              case 6:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert(\"Non-Harmony browser detected. You should consider trying MetaMask!\");\n                }\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.buyNimbus = function (oneAmount) {\n      _this.setState({\n        loading: true\n      });\n\n      _this.state.cloudSwap.methods.buyNimbus() //value = Payable\n      .send({\n        value: oneAmount,\n        from: _this.state.account\n      }).on(\"transactionHash\", function (hash) {\n        _this.setState({\n          loading: false\n        });\n      });\n    };\n\n    _this.sellNimbus = function (tokenAmount) {\n      _this.setState({\n        loading: true\n      });\n\n      _this.state.token.methods.approve(\"0x92e7C15f8c98288A9a0A9fc5281AA837B17D6D82\", tokenAmount).send({\n        from: _this.state.account\n      }).on(\"transactionHash\", function (hash) {\n        _this.state.cloudSwap.methods.sellNimbus(tokenAmount).send({\n          from: _this.state.account\n        }).on(\"transactionHash\", function (hash) {\n          _this.setState({\n            loading: false\n          });\n        });\n      });\n    };\n\n    _this.stakeTokens = function (tokenAmount) {\n      _this.setState({\n        loading: true\n      });\n\n      _this.state.token.methods.approve(\"0x6838c76A8b7F3155D78C2bDf549b2e42ed28d4C2\", tokenAmount).send({\n        from: _this.state.account\n      }).on(\"transactionHash\", function (hash) {\n        _this.state.cloudfarm.methods.depositTokens(tokenAmount).send({\n          from: _this.state.account\n        }).on(\"transactionHash\", function (hash) {\n          _this.setState({\n            loading: false\n          });\n        });\n      });\n    };\n\n    _this.unstakeTokens = function () {\n      _this.setState({\n        loading: true\n      });\n\n      _this.state.cloudfarm.methods.unstakeTokens().send({\n        from: _this.state.account\n      }).on(\"transactionHash\", function (hash) {\n        _this.setState({\n          loading: false\n        });\n      });\n    };\n\n    _this.issueTokens = function () {\n      _this.setState({\n        loading: true\n      });\n\n      _this.state.cloudfarm.methods.issueTokens().send({\n        from: _this.state.account\n      }).on(\"transactionHash\", function (hash) {\n        _this.setState({\n          loading: false\n        });\n      });\n    };\n\n    _this.buyTether = function (oneAmount) {\n      _this.setState({\n        loading: true\n      });\n\n      _this.state.usdtSwap.methods.buyTether() //value = Payable\n      .send({\n        value: oneAmount,\n        from: _this.state.account\n      }).on(\"transactionHash\", function (hash) {\n        _this.setState({\n          loading: false\n        });\n      });\n    };\n\n    _this.sellTether = function (tokenAmount) {\n      _this.setState({\n        loading: true\n      });\n\n      _this.state.usdtToken.methods.approve(\"0xfE5f3518CB4b80F0e424d1dDf860A37fa91b17d9\", tokenAmount).send({\n        from: _this.state.account\n      }).on(\"transactionHash\", function (hash) {\n        _this.state.usdtSwap.methods.sellTether(tokenAmount).send({\n          from: _this.state.account\n        }).on(\"transactionHash\", function (hash) {\n          _this.setState({\n            loading: false\n          });\n        });\n      });\n    };\n\n    _this.buyEther = function (oneAmount) {\n      _this.setState({\n        loading: true\n      });\n\n      _this.state.ethswap.methods.buyEther() //value = Payable\n      .send({\n        value: oneAmount,\n        from: _this.state.account\n      }).on(\"transactionHash\", function (hash) {\n        _this.setState({\n          loading: false\n        });\n      });\n    };\n\n    _this.sellEther = function (tokenAmount) {\n      _this.setState({\n        loading: true\n      });\n\n      _this.state.ethToken.methods.approve(\"0x8d4afD2d5DA7115fBb9f4bD6720Fb13E0B95E3F6\", tokenAmount).send({\n        from: _this.state.account\n      }).on(\"transactionHash\", function (hash) {\n        _this.state.ethswap.methods.sellEther(tokenAmount).send({\n          from: _this.state.account\n        }).on(\"transactionHash\", function (hash) {\n          _this.setState({\n            loading: false\n          });\n        });\n      });\n    };\n\n    _this.buyTether = function (oneAmount) {\n      _this.setState({\n        loading: true\n      });\n\n      _this.state.usdtSwap.methods.buyTether() //value = Payable\n      .send({\n        value: oneAmount,\n        from: _this.state.account\n      }).on(\"transactionHash\", function (hash) {\n        _this.setState({\n          loading: false\n        });\n      });\n    };\n\n    _this.sellTether = function (tokenAmount) {\n      _this.setState({\n        loading: true\n      });\n\n      _this.state.usdtToken.methods.approve(\"0xfE5f3518CB4b80F0e424d1dDf860A37fa91b17d9\", tokenAmount).send({\n        from: _this.state.account\n      }).on(\"transactionHash\", function (hash) {\n        _this.state.usdtSwap.methods.sellTether(tokenAmount).send({\n          from: _this.state.account\n        }).on(\"transactionHash\", function (hash) {\n          _this.setState({\n            loading: false\n          });\n        });\n      });\n    };\n\n    _this.buyBinance = function (oneAmount) {\n      _this.setState({\n        loading: true\n      });\n\n      _this.state.bnbswap.methods.buyBinance() //value = Payable\n      .send({\n        value: oneAmount,\n        from: _this.state.account\n      }).on(\"transactionHash\", function (hash) {\n        _this.setState({\n          loading: false\n        });\n      });\n    };\n\n    _this.sellBinance = function (tokenAmount) {\n      _this.setState({\n        loading: true\n      });\n\n      _this.state.bnbToken.methods.approve(\"0xB3c9ef8f9Ddf730DedbE1A1f7cbd75b90b3dD2Ec\", tokenAmount).send({\n        from: _this.state.account\n      }).on(\"transactionHash\", function (hash) {\n        _this.state.bnbswap.methods.sellBinance(tokenAmount).send({\n          from: _this.state.account\n        }).on(\"transactionHash\", function (hash) {\n          _this.setState({\n            loading: false\n          });\n        });\n      });\n    };\n\n    _this.state = {\n      account: \"\",\n      token: {},\n      cloudSwap: {},\n      oneBalance: \"0\",\n      tokenBalance: \"0\",\n      cloudfarm: {},\n      stakingBalance: \"0\",\n      loading: true,\n      usdtBalance: 0,\n      usdtToken: {},\n      usdtSwap: {},\n      ethToken: {},\n      ethBalance: 0,\n      ethswap: {},\n      bnbToken: {},\n      bnbBalance: 0,\n      bnbswap: {}\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var contents, content, contentFarm, contentNav, contentFoot, contentUsdt;\n\n      if (this.state.loading) {\n        contents = React.createElement(\"h2\", {\n          id: \"loader\",\n          className: \"text-center text-dark\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 368\n          },\n          __self: this\n        }, \"Loading\");\n      } else {\n        var _React$createElement;\n\n        content = React.createElement(Main, (_React$createElement = {\n          oneBalance: this.state.oneBalance,\n          tokenBalance: this.state.tokenBalance\n        }, _defineProperty(_React$createElement, \"oneBalance\", this.state.oneBalance), _defineProperty(_React$createElement, \"buyNimbus\", this.buyNimbus), _defineProperty(_React$createElement, \"sellNimbus\", this.sellNimbus), _defineProperty(_React$createElement, \"__source\", {\n          fileName: _jsxFileName,\n          lineNumber: 374\n        }), _defineProperty(_React$createElement, \"__self\", this), _React$createElement));\n        contentFarm = React.createElement(Farm, {\n          tokenBalance: this.state.tokenBalance,\n          oneBalance: this.state.oneBalance,\n          stakingBalance: this.state.stakingBalance,\n          stakeTokens: this.stakeTokens,\n          unstakeTokens: this.unstakeTokens,\n          issueTokens: this.issueTokens,\n          account: this.state.account,\n          stakeOne: this.stakeOne,\n          unstakeOne: this.unstakeOne,\n          stakingBalanceOne: this.state.stakingBalanceOne,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 383\n          },\n          __self: this\n        });\n        contentNav = React.createElement(NavBar, {\n          account: this.state.account,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 396\n          },\n          __self: this\n        });\n        contentFoot = React.createElement(FooTer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 397\n          },\n          __self: this\n        });\n        contentUsdt = React.createElement(MainU, {\n          oneBalance: this.state.oneBalance,\n          usdtBalance: this.state.usdtBalance,\n          buyTether: this.buyTether,\n          sellTether: this.sellTether,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 399\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409\n        },\n        __self: this\n      }, React.createElement(BrowserRouter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410\n        },\n        __self: this\n      }, contentNav, React.createElement(\"div\", {\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412\n        },\n        __self: this\n      }, React.createElement(Routes, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"/swap\",\n        element: content,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/earn\",\n        element: contentFarm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/\",\n        element: React.createElement(Home, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 416\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/uswap\",\n        element: contentUsdt,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/about\",\n        element: React.createElement(About, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 418\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/bswap\",\n        element: React.createElement(MainBnb, {\n          oneBalance: this.state.oneBalance,\n          bnbBalance: this.state.bnbBalance,\n          buyBinance: this.buyBinance,\n          sellBinance: this.sellBinance,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 422\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/eswap\",\n        element: React.createElement(MainE, {\n          oneBalance: this.state.oneBalance,\n          ethBalance: this.state.ethBalance,\n          buyEther: this.buyEther,\n          sellEther: this.sellEther,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 433\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430\n        },\n        __self: this\n      }))), contentFoot));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/pon/Desktop/Cloud Kingdom Swap/First-Dapp101/src/components/App.jsx"],"names":["React","Component","Web3","NavBar","Main","Cloudswap","NimbusToken","Farm","Cloudfarm","BrowserRouter","Route","Routes","FooTer","Home","MainU","Tether","Usdtswap","MainBnb","MainE","Eth","ethswap","Bnb","bnbSwap","About","web3","App","loadWeb3","loadBlockchainData","window","eth","getAccounts","accounts","setState","account","getBalance","state","oneBalance","nimbusAbi","abi","net","getId","networkId","nimbusAddress","token","Contract","methods","balanceOf","call","tokenBalance","toString","alert","musdtAbi","musdtAddress","usdtToken","usdtBalance","cloudswapAbi","cloudswapAddress","cloudSwap","usdtswapAbi","usdtswapAddress","usdtSwap","cloudfarmAbi","cloudfarmAddress","cloudfarm","stakingBalance","methAbi","methAddress","ethToken","ethBalance","ethswapAbi","ethswapAddress","mbnbAbi","mbnbAddress","bnbToken","nbnbBalance","bnbBalance","bnbswapAbi","bnbswapAddress","bnbswap","loading","ethereum","enable","currentProvider","props","buyNimbus","oneAmount","send","value","from","on","hash","sellNimbus","tokenAmount","approve","stakeTokens","depositTokens","unstakeTokens","issueTokens","buyTether","sellTether","buyEther","sellEther","buyBinance","sellBinance","contents","content","contentFarm","contentNav","contentFoot","contentUsdt","stakeOne","unstakeOne","stakingBalanceOne"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Web3 from \"web3\";\nimport NavBar from \"./NavBar\";\nimport Main from \"./../pages/Main\";\nimport Cloudswap from \"./../abis/Cloudswap.json\";\nimport NimbusToken from \"./../abis/NimbusToken.json\";\nimport Farm from \"./../pages/Farm\";\nimport Cloudfarm from \"./../abis/Cloudfarm.json\";\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport \"./App.css\";\nimport FooTer from \"./FooTer\";\nimport Home from \"./../pages/Home\";\nimport MainU from \"./../pages/musdt/MainU\";\nimport Tether from \"./../abis/Tether.json\";\nimport Usdtswap from \"./../abis/Usdtswap.json\";\nimport MainBnb from \"./../pages/mBNB/MainU\";\nimport MainE from \"./../pages/mEth/MainU\";\nimport Eth from \"./../abis/Ether.json\";\nimport ethswap from \"./../abis/Ethswap.json\";\nimport Bnb from \"./../abis/Binance.json\";\nimport bnbSwap from \"./../abis/Bnbswap.json\";\nimport About from \"./../pages/About\";\n\nlet web3 = new Web3();\n\nclass App extends Component {\n  async componentWillMount() {\n    await this.loadWeb3();\n    await this.loadBlockchainData();\n  }\n\n  async loadBlockchainData() {\n    web3 = window.web3;\n\n    const accounts = await web3.eth.getAccounts();\n    this.setState({ account: accounts[0] });\n\n    const oneBalance = await web3.eth.getBalance(this.state.account);\n    this.setState({ oneBalance });\n    //load NimbusToken\n    const nimbusAbi = NimbusToken.abi;\n    const networkId = await web3.eth.net.getId();\n    const nimbusAddress = \"0x4DCf3dBe1728D15Dd2e6a06D72670caf13140F2D\";\n    if (networkId == 1666700000) {\n      const token = new web3.eth.Contract(nimbusAbi, nimbusAddress);\n      this.setState({ token });\n      let tokenBalance = await token.methods\n        .balanceOf(this.state.account)\n        .call();\n      this.setState({ tokenBalance: tokenBalance.toString() });\n    } else {\n      window.alert(\n        \"Clouds Kingdom Swap contract not deployed to detected network.\"\n      );\n    }\n\n    //load mUsdt\n    const musdtAbi = Tether.abi;\n    const musdtAddress = \"0x8b74DdA20Dd6107823693C1b437f6849a42eB676\";\n    if (networkId == 1666700000) {\n      const usdtToken = new web3.eth.Contract(musdtAbi, musdtAddress);\n      this.setState({ usdtToken });\n      let usdtBalance = await usdtToken.methods\n        .balanceOf(this.state.account)\n        .call();\n      this.setState({ usdtBalance: usdtBalance.toString() });\n    } else {\n      window.alert(\"mUSDT contract not deployed to detected network.\");\n    }\n\n    //load Cloudswap\n    const cloudswapAbi = Cloudswap.abi;\n    const cloudswapAddress = \"0x92e7C15f8c98288A9a0A9fc5281AA837B17D6D82\";\n    if (networkId == 1666700000) {\n      const cloudSwap = new web3.eth.Contract(cloudswapAbi, cloudswapAddress);\n      this.setState({ cloudSwap });\n    } else {\n      window.alert(\n        \"Clouds Kingdom Swap contract not deployed to detected network.\"\n      );\n    }\n\n    //load usdtSwap\n    const usdtswapAbi = Usdtswap.abi;\n    const usdtswapAddress = \"0xfE5f3518CB4b80F0e424d1dDf860A37fa91b17d9\";\n    if (networkId == 1666700000) {\n      const usdtSwap = new web3.eth.Contract(usdtswapAbi, usdtswapAddress);\n      this.setState({ usdtSwap });\n    } else {\n      window.alert(\n        \"Clouds Kingdom Swap contract not deployed to detected network.\"\n      );\n    }\n\n    //load Cloudfarm\n    const cloudfarmAbi = Cloudfarm.abi;\n    const cloudfarmAddress = \"0x6838c76A8b7F3155D78C2bDf549b2e42ed28d4C2\";\n    if (networkId == 1666700000) {\n      const cloudfarm = new web3.eth.Contract(cloudfarmAbi, cloudfarmAddress);\n      this.setState({ cloudfarm });\n      let stakingBalance = await cloudfarm.methods\n        .stakingBalance(this.state.account)\n        .call();\n      this.setState({ stakingBalance: stakingBalance.toString() });\n    } else {\n      window.alert(\n        \"CloudsKingdomSwap contract not deployed to detected network.\"\n      );\n    }\n\n    const methAbi = Eth.abi;\n    const methAddress = \"0x79eBF567B2207dAfd8DA44FAb897664F5ef1EF11\";\n    if (networkId == 1666700000) {\n      const ethToken = new web3.eth.Contract(methAbi, methAddress);\n      this.setState({ ethToken });\n      let ethBalance = await ethToken.methods\n        .balanceOf(this.state.account)\n        .call();\n      this.setState({ ethBalance: ethBalance.toString() });\n    } else {\n      window.alert(\"meth contract not deployed to detected network.\");\n    }\n\n    //load ethswap\n    const ethswapAbi = ethswap.abi;\n    const ethswapAddress = \"0x8d4afD2d5DA7115fBb9f4bD6720Fb13E0B95E3F6\";\n    if (networkId == 1666700000) {\n      const ethswap = new web3.eth.Contract(ethswapAbi, ethswapAddress);\n      this.setState({ ethswap });\n    } else {\n      window.alert(\n        \"Clouds Kingdom Swap contract not deployed to detected network.\"\n      );\n    }\n\n    const mbnbAbi = Bnb.abi;\n    const mbnbAddress = \"0xdE8335956603378F934f7E2De27a9961E5f67642\";\n    if (networkId == 1666700000) {\n      const bnbToken = new web3.eth.Contract(mbnbAbi, mbnbAddress);\n      this.setState({ bnbToken });\n      let nbnbBalance = await bnbToken.methods\n        .balanceOf(this.state.account)\n        .call();\n      this.setState({ bnbBalance: nbnbBalance.toString() });\n    } else {\n      window.alert(\"mbnb contract not deployed to detected network.\");\n    }\n\n    const bnbswapAbi = bnbSwap.abi;\n    const bnbswapAddress = \"0xB3c9ef8f9Ddf730DedbE1A1f7cbd75b90b3dD2Ec\";\n    if (networkId == 1666700000) {\n      const bnbswap = new web3.eth.Contract(bnbswapAbi, bnbswapAddress);\n      this.setState({ bnbswap });\n    } else {\n      window.alert(\n        \"Clouds Kingdom Swap contract not deployed to detected network.\"\n      );\n    }\n\n    this.setState({ loading: false });\n  }\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert(\n        \"Non-Harmony browser detected. You should consider trying MetaMask!\"\n      );\n    }\n  }\n\n  buyNimbus = (oneAmount) => {\n    this.setState({ loading: true });\n    this.state.cloudSwap.methods\n      .buyNimbus()\n      //value = Payable\n      .send({ value: oneAmount, from: this.state.account })\n      .on(\"transactionHash\", (hash) => {\n        this.setState({ loading: false });\n      });\n  };\n\n  sellNimbus = (tokenAmount) => {\n    this.setState({ loading: true });\n    this.state.token.methods\n      .approve(\"0x92e7C15f8c98288A9a0A9fc5281AA837B17D6D82\", tokenAmount)\n      .send({ from: this.state.account })\n      .on(\"transactionHash\", (hash) => {\n        this.state.cloudSwap.methods\n          .sellNimbus(tokenAmount)\n          .send({ from: this.state.account })\n          .on(\"transactionHash\", (hash) => {\n            this.setState({ loading: false });\n          });\n      });\n  };\n\n  //staking function\n  stakeTokens = (tokenAmount) => {\n    this.setState({ loading: true });\n    this.state.token.methods\n      .approve(\"0x6838c76A8b7F3155D78C2bDf549b2e42ed28d4C2\", tokenAmount)\n      .send({ from: this.state.account })\n      .on(\"transactionHash\", (hash) => {\n        this.state.cloudfarm.methods\n          .depositTokens(tokenAmount)\n          .send({ from: this.state.account })\n          .on(\"transactionHash\", (hash) => {\n            this.setState({ loading: false });\n          });\n      });\n  };\n\n  unstakeTokens = () => {\n    this.setState({ loading: true });\n    this.state.cloudfarm.methods\n      .unstakeTokens()\n      .send({ from: this.state.account })\n      .on(\"transactionHash\", (hash) => {\n        this.setState({ loading: false });\n      });\n  };\n  issueTokens = () => {\n    this.setState({ loading: true });\n    this.state.cloudfarm.methods\n      .issueTokens()\n      .send({ from: this.state.account })\n      .on(\"transactionHash\", (hash) => {\n        this.setState({ loading: false });\n      });\n  };\n\n  buyTether = (oneAmount) => {\n    this.setState({ loading: true });\n    this.state.usdtSwap.methods\n      .buyTether()\n      //value = Payable\n      .send({ value: oneAmount, from: this.state.account })\n      .on(\"transactionHash\", (hash) => {\n        this.setState({ loading: false });\n      });\n  };\n\n  sellTether = (tokenAmount) => {\n    this.setState({ loading: true });\n    this.state.usdtToken.methods\n      .approve(\"0xfE5f3518CB4b80F0e424d1dDf860A37fa91b17d9\", tokenAmount)\n      .send({ from: this.state.account })\n      .on(\"transactionHash\", (hash) => {\n        this.state.usdtSwap.methods\n          .sellTether(tokenAmount)\n          .send({ from: this.state.account })\n          .on(\"transactionHash\", (hash) => {\n            this.setState({ loading: false });\n          });\n      });\n  };\n\n  buyEther = (oneAmount) => {\n    this.setState({ loading: true });\n    this.state.ethswap.methods\n      .buyEther()\n      //value = Payable\n      .send({ value: oneAmount, from: this.state.account })\n      .on(\"transactionHash\", (hash) => {\n        this.setState({ loading: false });\n      });\n  };\n\n  sellEther = (tokenAmount) => {\n    this.setState({ loading: true });\n    this.state.ethToken.methods\n      .approve(\"0x8d4afD2d5DA7115fBb9f4bD6720Fb13E0B95E3F6\", tokenAmount)\n      .send({ from: this.state.account })\n      .on(\"transactionHash\", (hash) => {\n        this.state.ethswap.methods\n          .sellEther(tokenAmount)\n          .send({ from: this.state.account })\n          .on(\"transactionHash\", (hash) => {\n            this.setState({ loading: false });\n          });\n      });\n  };\n\n  buyTether = (oneAmount) => {\n    this.setState({ loading: true });\n    this.state.usdtSwap.methods\n      .buyTether()\n      //value = Payable\n      .send({ value: oneAmount, from: this.state.account })\n      .on(\"transactionHash\", (hash) => {\n        this.setState({ loading: false });\n      });\n  };\n\n  sellTether = (tokenAmount) => {\n    this.setState({ loading: true });\n    this.state.usdtToken.methods\n      .approve(\"0xfE5f3518CB4b80F0e424d1dDf860A37fa91b17d9\", tokenAmount)\n      .send({ from: this.state.account })\n      .on(\"transactionHash\", (hash) => {\n        this.state.usdtSwap.methods\n          .sellTether(tokenAmount)\n          .send({ from: this.state.account })\n          .on(\"transactionHash\", (hash) => {\n            this.setState({ loading: false });\n          });\n      });\n  };\n\n  buyBinance = (oneAmount) => {\n    this.setState({ loading: true });\n    this.state.bnbswap.methods\n      .buyBinance()\n      //value = Payable\n      .send({ value: oneAmount, from: this.state.account })\n      .on(\"transactionHash\", (hash) => {\n        this.setState({ loading: false });\n      });\n  };\n\n  sellBinance = (tokenAmount) => {\n    this.setState({ loading: true });\n    this.state.bnbToken.methods\n      .approve(\"0xB3c9ef8f9Ddf730DedbE1A1f7cbd75b90b3dD2Ec\", tokenAmount)\n      .send({ from: this.state.account })\n      .on(\"transactionHash\", (hash) => {\n        this.state.bnbswap.methods\n          .sellBinance(tokenAmount)\n          .send({ from: this.state.account })\n          .on(\"transactionHash\", (hash) => {\n            this.setState({ loading: false });\n          });\n      });\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: \"\",\n      token: {},\n      cloudSwap: {},\n      oneBalance: \"0\",\n      tokenBalance: \"0\",\n      cloudfarm: {},\n      stakingBalance: \"0\",\n      loading: true,\n      usdtBalance: 0,\n      usdtToken: {},\n      usdtSwap: {},\n      ethToken: {},\n      ethBalance: 0,\n      ethswap: {},\n      bnbToken: {},\n      bnbBalance: 0,\n      bnbswap: {},\n    };\n  }\n\n  render() {\n    let contents, content, contentFarm, contentNav, contentFoot, contentUsdt;\n    if (this.state.loading) {\n      contents = (\n        <h2 id=\"loader\" className=\"text-center text-dark\">\n          Loading\n        </h2>\n      );\n    } else {\n      content = (\n        <Main\n          oneBalance={this.state.oneBalance}\n          tokenBalance={this.state.tokenBalance}\n          oneBalance={this.state.oneBalance}\n          buyNimbus={this.buyNimbus}\n          sellNimbus={this.sellNimbus}\n        />\n      );\n      contentFarm = (\n        <Farm\n          tokenBalance={this.state.tokenBalance}\n          oneBalance={this.state.oneBalance}\n          stakingBalance={this.state.stakingBalance}\n          stakeTokens={this.stakeTokens}\n          unstakeTokens={this.unstakeTokens}\n          issueTokens={this.issueTokens}\n          account={this.state.account}\n          stakeOne={this.stakeOne}\n          unstakeOne={this.unstakeOne}\n          stakingBalanceOne={this.state.stakingBalanceOne}\n        />\n      );\n      contentNav = <NavBar account={this.state.account} />;\n      contentFoot = <FooTer />;\n      contentUsdt = (\n        <MainU\n          oneBalance={this.state.oneBalance}\n          usdtBalance={this.state.usdtBalance}\n          buyTether={this.buyTether}\n          sellTether={this.sellTether}\n        />\n      );\n    }\n\n    return (\n      <div className=\"App\">\n        <BrowserRouter>\n          {contentNav}\n          <div className=\"\">\n            <Routes>\n              <Route path=\"/swap\" element={content} />\n              <Route path=\"/earn\" element={contentFarm} />\n              <Route path=\"/\" element={<Home />} />\n              <Route path=\"/uswap\" element={contentUsdt} />\n              <Route path=\"/about\" element={<About />} />\n              <Route\n                path=\"/bswap\"\n                element={\n                  <MainBnb\n                    oneBalance={this.state.oneBalance}\n                    bnbBalance={this.state.bnbBalance}\n                    buyBinance={this.buyBinance}\n                    sellBinance={this.sellBinance}\n                  />\n                }\n              />\n              <Route\n                path=\"/eswap\"\n                element={\n                  <MainE\n                    oneBalance={this.state.oneBalance}\n                    ethBalance={this.state.ethBalance}\n                    buyEther={this.buyEther}\n                    sellEther={this.sellEther}\n                  />\n                }\n              />\n            </Routes>\n          </div>\n          {contentFoot}\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}